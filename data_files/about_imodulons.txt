Introduction
All living things need to adapt their gene expression to the situation they are in. The transcriptional regulatory network (TRN) is the system within cells that enables this. For instance, consider the gene glpT in E. coli, which is used to import a specific type of food, glycerol. When glycerol is present in the cell’s media, components of the TRN will sense it and respond by upregulating glpT so that the cell can use it for growth. The TRN controls metabolism, stress responses, growth, and nearly every biological process. It is therefore of particular interest in science to understand how it works.
Traditional methods for studying the TRN have focused on individual genes and regulators, especially in model organisms. Wet lab microbiologists have spent decades deleting or overexpressing particular genes, making hypotheses about the effects, and testing them in drill-down studies. In this way, researchers have built a bottom-up understanding of how the TRN works. This approach is very important for making confident claims about individual systems, but it is time-consuming, costly, and often fails to support mathematical models of global gene expression.
Thus, we have developed a new approach which creates a top-down perspective on the TRN. We start with a transcriptomic dataset, which measures the expression of each gene under several conditions. There are thousands of genes in any given organism, and we hope to understand as much of the data as possible – therefore, we need to use machine learning to look for patterns in that dataset which give us valuable insight into the underlying regulation.
Applications of this Knowledge
Why study bacterial transcriptional regulation?
•	Disease and Antimicrobials: Some of the bacteria we study, such as tuberculosis, cause important diseases. They make us sick by adapting their gene expression to their host environment, and understanding the process by which they do that can help us to better fight disease. The insights we gain into how bacteria respond to stress also help the field develop new antibiotics.
•	Bacterial cell factories: Bacteria are used to produce a ton of products for humans, such as pharmaceuticals and biofuels, and understanding how they regulate their genes improves the existing efficiency and opens doors to producing new products.
•	Understand evolution: Knowledge of how gene expression changes in small-scale evolution experiments and across the phylogenetic tree can tell us how organisms change in general, which might help us in fighting future pandemics.
•	Future applications to other organisms: Technology developed for bacteria can eventually be useful in more complex organisms, like humans. This would be applicable to understanding any human disease with a genetic component.

Introduction to Transcriptomic Data
This is a transcriptomic dataset. Each column represents an experimental condition that cells were subjected to, and each row represents a gene. Each element is an expression value indicating how active the gene is under the given condition (typically measured using RNA-sequencing or microarrays). This dataset has been normalized such that the entire left column, representing the baseline condition of simple growth on glucose, is zero (white), and positive and negative values in other elements indicate that the gene is more or less expressed than it is in the baseline. At iModulonDB, we generate some of the datasets we analyze in-house and download many of them from online sources such as the Sequence Read Archive.
Problems in Transcriptomics
•	There are an extremely large number of genes - it would be nice if they were grouped together into a smaller number of variables.
•	We want to know the activity of the underlying genetic regulators, and which regulators are most important.
•	Some genes are completely unstudied - can we guess their function and regulation?
iModulons
Data scientists have developed machine learning algorithms that can address the problems described above. Unsupervised machine learning algorithms can identify patterns and structures underlying big datasets by simply using the information in the dataset itself. Independent Component Analysis (ICA) is one such method, and it has outperformed many other algorithms in detecting co-regulated gene sets.
By running the ICA algorithm on a transcriptomic dataset (see our github), we generate a set of iModulons. Each iModulon is a group of genes that represents an independently modulated signal, which the cell is probably controlling using the same or related regulators. Mathematically, an iModulon has a weight for each gene and an activity for each condition. The highly weighted genes are iModulon members, and the highly active conditions are those that the iModulon is likely performing a function in. We characterize an iModulon by interpreting its gene members and activity levels. For example, the Glycerol iModulon contains all the genes that are associated with digesting glycerol, and it is active when glycerol is present in the media. 

X: Original transcriptomic dataset. We make the assumption that the X matrix results from a mix of underlying signals (iModulons) controlled by regulators like transcription factors (TFs), and we use the ICA algorithm to identify those signals.
M: Links genes to iModulons. A gene that is highly weighted is said to be a “member” of the iModulon, and all iModulon members are expressed as a group. If the iModulon is a sports team, the M matrix defines who the players are.
A: Links iModulons to conditions. If an iModulon is highly active in a given condition, it is probably carrying out a function that is important in that condition. If the iModulon is a sports team, the A matrix describes its playbook.
iModulon Definitions and Properties
•	iModulon: An independently modulated group of genes, often representing the effect of a transcriptional regulator. These are identified by observing patterns in transciptomic datasets.
•	Regulon: A group of genes regulated by the same transcriptional regulator, as defined by literature. iModulons are often nearly identical to regulons, but may also be subsets or combinations of regulons.
•	Gene weights: Each iModulon contains a weighting for each of its constituent genes. Genes with large weightings are more sensitive to changes in the underlying regulator’s activity than genes with small weightings. Genes can also have negative weightings, indicating a tradeoff between those genes and their positive counterparts.
•	iModulon Activity: Analogous to gene expression, iModulon activity represents how much of the iModulon genes are present under a given condition. Input data is normalized so that the base condition always has activity of zero. The units are the same as the initial dataset, but they result from matrix multiplication which makes them dependent on the gene weight distribution.
•	Independence: The underlying assumption behind ICA is that each transcription factor has an independent effect across the genome. This means that merely knowing the targets of one regulator does not provide any information on the targets of another regulator. Unlike other matrix decomposition algorithms like PCA, ICA uses statistical independence to define the iModulons it finds. This means that iModulons are not always orthogonal to one another.
•	Linear Additivity: iModulons obey matrix multiplication rules. A gene can be in more than one iModulon; when this happens, the action of both iModulons add together to determine gene expression, in a manner proportional to the gene weights.
•	Reconstruction: The iModulon matrices “decompose” the transcriptomic matrix. This means we can reconstruct the initial data using the iModulons, and compare them. In our original paper on this topic, the iModulons accounted for 76% of the variance in the original data. The genes in iModulons are the most important ones for explaining what is happening in the original data, and everything else only counts for 24%.
•	PRECISE: Precision RNA-seq Expression Compendium for Independent Signal Extraction, typically followed by the number of included samples. This is the name we use for datasets that were generated in full or part by our lab.
•	Modulome: The set of all computable iModulons from available data, and the name of our project to download publicly available data and analyze it with our pipeline. When a dataset is a combination of samples from other labs, we name it after this project (e.g. M. tuberculosis Modulome).
Where does ICA come from?

ICA was originally developed in the 1980s to solve the blind source separation problem, also known as the cocktail party problem. Imagine you place microphones around a crowded, noisy room. Each microphone would pick up different combinations of each speaker. If we apply ICA to the resultant set of recordings, we can identify the original source signals (M) without any other information. In addition, ICA infers the volume of each source in each microphone-measured signal (A).
Similarly, a transcriptomic dataset acts like microphones into the cell, measuring the combined effects of different transcriptional regulators with various condition-specific activities. The regulators/iModulons are behaving independently in the cell, the same way that the people in the room behave independently.
Examples of iModulons
•	Glycerol: glpR regulates the import and catabolism of glycerol, and this iModulon is active when glycerol is present.
•	Leu/Val/Ile: This iModulon is regulated by both leucine-tRNA attenuation and isoleucine-tRNA attenuation. It contains genes for producing the branched chain amino acids, and it is active when they are needed and inactive when they are present.
•	SoxS: This iModulon regulates the response to a type of stress (oxidative stress).
•	FlhDC-1: This iModulon encodes flagella assembly. If it is active, the cell is likely to be motile. If not, the cell is probably stationary.
•	baeR KO: Not all iModulons represent transcription factors. They can also capture genomic alterations in the dataset. Here, the baeR gene was knocked out, and an iModulon captured the change to the transcriptome that resulted.

